import { DoneCallback, Profile } from "passport";
import User from "./models/User";
import connectMongo from "./helpers/connectMongo";

const passport = require("passport");
const GoogleStrategy = require("passport-google-oauth2").Strategy;

const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;
const GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;

passport.use(
  new GoogleStrategy(
    {
      clientID: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      callbackURL: "http://localhost:8080/auth/google/callback",
      passReqToCallback: true,
    },
    // TODO: Fix types
    async (
      request: any,
      accessToken: any,
      refreshToken: any,
      profile: Profile & { email?: string; picture?: string },
      done: DoneCallback
    ) => {
      try {
        // TODO: Convert each await statement to Promise.then(...).catch(...) to catch errors properly
        await connectMongo();
        const existingUser = await User.findOne({ email: profile.email });
        if (!existingUser) {
          const userCreationResponse = await User.create({
            email: profile.email,
            name: profile.displayName,
            picture: profile.picture,
            count: 0,
          });
        } 
      } catch (err) {
        console.log("An error occured. err = ", err);
        done(err, profile);
      }
      return done(null, profile);
    }
  )
);

// FIX types
passport.serializeUser(function (user: any, done: any) {
  done(null, user);
});

// FIX types
passport.deserializeUser(function (user: any, done: any) {
  done(null, user);
});
