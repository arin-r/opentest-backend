
import { Schema, model, models, Model } from "mongoose";


type TestSesionInfo = {
  //TODO: Fix types
  user: any; // points to user._id
  sessionOf: any; // points to test._id
  attempts: any; //[{question._id, answer: string}]
  startTime: Date;
  endTime: Date;
};

type AttemptType = {
  questionId: any,
  chosenOptionId: string | null,
  markedForReview: boolean,
  seen: boolean
}
const attemptSchema = new Schema<AttemptType>( {
    questionId: {
      type: Schema.Types.ObjectId,
      required: true
    },
    chosenOptionId: {
      type: String,
      required: true
    },
    markedForReview: {
      type: Boolean,
      required: true
    },
    seen: {
      type: Boolean,
      required: true
    },
  },
  {_id: false}
)

const testSessionSchema = new Schema<TestSesionInfo>({
  user: {
    type: Schema.Types.ObjectId,
    ref: "User",
    required: true
  },
  sessionOf: {
    type: Schema.Types.ObjectId,
    ref: "Test",
    required: true
  },
  attempts: {
    type: [attemptSchema],
    required: true
  },
  startTime: {
    type: Date,
    required: true
  },
  endTime: {
    type: Date,
    required: true,
  }
});

export default (models.TestSession as Model<TestSesionInfo>) || model("TestSession", testSessionSchema);
